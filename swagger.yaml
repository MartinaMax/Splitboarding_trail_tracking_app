openapi: 3.0.0
info:
  title: Compulsatory asssigment
  description: MongoDB ExpressJS NodeJS REST-API
  version: 1.0.0
servers:
  - url: http://localhost:4000/api/
    description: Localhost development server
  - url: https://splitboarding-trail-treking-app.onrender.com
    description: Remote deployment on render.com

tags:
  - name: Get Routes
    description: Routes that get products


components:
  securitySchemes:
    ApiKeyAuth:        # arbitrary name for the security scheme
      type: apiKey
      in: header       # can be "header", "query" or "cookie"
      name: auth-token

  schemas:
    trail:
      type: object
      properties:
        id:
          type: string
        createdBy:
          type: string
        name:
          type: string
        description:
          type: string
        distance:
          type: number
        duration:
          type: string
        date:
          type: string
    
    user:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        username:
          type: string
        email:
          type: string
        password:
          type: string
        gear:
          type: sting
        date:
          type: string

paths:

  /user/register:
    post:
      summary: Registration of a new user
      description: Registration of a new user in the database
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/user"

      responses:
        201:
          description: User created succesfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  _id:
                    type: string

  /user/login:
    post:
      summary: Login of a user
      description: Login of a user in order to get JWT token (auth-token)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      
      responses:
        200:
          description: User logged in succesfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  data:
                    type: string


  # /user/refresh:
  #   post:
  #     summary: Refresh the token when expired
  #     description: When the access token is expired, the front-end can run this route to refresh and get a new access token (auth-token)
  #     requestBody:
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             type: object
  #             properties:
  #               email:
  #                 type: string
  #               refreshToken:
  #                 type: string
      
      # responses:
      #   200:
      #     description: Access token refreshed successfully
      #     content:
      #       application/json:
      #         schema:
      #           type: object
      #           properties:
      #             success:
      #               type: boolean
      #             accessToken:
      #               type: string


  /trail:
    get:
      tags:
      - Get Route
      summary: Retrieves a list of trails
      description: Retrieves a list of trails as JSON objects.
      responses:
        200:
          description: A list of product JSON objects in an array.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/trail"
    
    post:
      summary: Create a new trail
      description: Create a new trail
      security:
        - ApiKeyAuth: []      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/trail"

      responses:
        201:
          description: Trail created succesfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/trail"

  /trail/{createdBy}:
    get:
      tags:
      - Get Route
      summary: Trails created by user
      description: Retrieves trails based on the user it was created by.
      security:
        - ApiKeyAuth: []   
      parameters:
        - in: path
          name: createdBy
          required: true
          description: MongoDB id
          schema:
            type: string
      responses:
        200:
          description: A trail in the format of a JSON object.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/trail"
  
  /trail/{id}:
    # get:
    #   tags:
    #   - Get Route
    #   summary: Specific trail
    #   description: Retrieves a specific trail based on its ID.
    #   parameters:
    #     - in: path
    #       name: id
    #       required: true
    #       description: MongoDB id
    #       schema:
    #         type: string
    #   responses:
    #     200:
    #       description: A trail in the format of a JSON object.
    #       content:
    #         application/json:
    #           schema:
    #             type: array
    #             items:
    #               $ref: "#/components/schemas/trail"
   
    put:
      summary: Updates a specific trail
      description: Updates a specific trail based on its ID
      security:
        - ApiKeyAuth: []            
      parameters:
        - in: path
          name: id
          required: true
          description: MongoDB id
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/trail"

      responses:
        201:
          description: Trail updated succesfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/trail"

    delete:
      summary: Deletes a specific trail
      description: Deletes a specific trail based on its ID
      security:
        - ApiKeyAuth: []            
      parameters:
        - in: path
          name: id
          required: true
          description: MongoDB id
          schema:
            type: string      

      responses:
        201:
          description: Trail deleted succesfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/trail"


  
   
